#include <stdlib.h>
#include <stdio.h>
#include <ctype.h>

//declare forward and back indexes
int f = 0;
int b = 0;
int length = 0;

//declare functions
int whitespace(char* buffer);
int catchall(char* buffer);
int identify_variables(char* buffer);
int identify_integer(char* buffer);
int get_token(char* buffer);

int whitespace(char* buffer){
	while(isspace(buffer[f])){
		f++;
		b++;
	}
}
int catchall(char* buffer){
	//check any possible characters
	if(!isdigit(buffer[f])){
		if(buffer[f] != '\0'){
			printf("Unrecognized symbol: %c\n", buffer[f]);
			}			
			f++;
			b++;
		}
	

}
//returns 1 if a token was found and 0 if not

int identify_variables(char* buffer){
  //starting out, we are in state 1 (s1)
  //check the first char of the buffer to see if we can move to s2
  if( buffer[f] == 'v'){
    f++;
    //move to next "state"
    while(isalpha(buffer[f]) || isdigit(buffer[f])){
      f++;
    }
    //copy over everything from b to f
    char* token = malloc(sizeof(char) * (f - b + 1));
    int i = b;
    int j = 0;

    while(i < f){
      token[j] = buffer[i];
      i++;
      j++;
    }

    token[i + 1] = '\0';
    printf("Found token: %s\n", token);

   //set b to the new beginning
    b = f;

    free(token);
    return 1;
  }
}

int identify_integer(char* buffer){
	length = 0;


	if(isdigit(buffer[f])){
    f++;
	length++;

    //move to next "state"
    while(isdigit(buffer[f])){
      f++;
	  length++;
    }

    //copy over everything from b to f
    char* token = malloc(sizeof(char) * (f - b + 1));
    int i = b;
    int j = 0;

    while(i < f){
      token[j] = buffer[i];
      i++;
      j++;
    }

	if(length < 10){
	    token[i + 1] = '\0';
		if(token[0] == '0' && isdigit(token[1])){
		printf("Leading zeroes not allowed: %s\n", token);	    
		}
		else{		
		printf("Found token: %s\n", token);
		}
	}
	
	else{
		token[i + 1] = '\0';
	    printf("Integer is too long %s\n", token);
		printf("Integer length: %d\n", length);
		}

   //set b to the new beginning
    b = f;

    free(token);
    return 1;
  }
}

int get_token(char* buffer){
	while(buffer[f] != '\0'){
		identify_integer(buffer);		
		whitespace(buffer);
		catchall(buffer);
	}
}



int main(){

        char* buffer = "var1 !! var2 var3 !! 00123 1 2 345345345345345 320132 1.3434 01\0";
		get_token(buffer);
      	return 0;
}
